@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* UNDERGLASS.AI Design System */
    /* Base Colors - Deep Black Foundation */
    --background: 240 6% 5%;           /* #0C0C0E - Deep black */
    --foreground: 210 20% 88%;         /* Light gray for text */

    /* Glass Layers */
    --glass: 240 6% 10%;               /* #1A1A1F - Graphite glass */
    --glass-border: 180 100% 50%;      /* #00FFFF - Cyan glass edge */
    
    /* Card System */
    --card: 240 6% 8%;                 /* Slightly lighter than bg */
    --card-foreground: 210 20% 88%;

    --popover: 240 6% 10%;
    --popover-foreground: 210 20% 88%;

    /* Primary - Cyan Intelligence */
    --primary: 180 100% 50%;           /* #00FFFF - Active intelligence */
    --primary-foreground: 240 6% 5%;
    --primary-glow: 180 100% 65%;      /* Lighter cyan for glow */

    /* Secondary - Graphite Layer */
    --secondary: 240 6% 15%;
    --secondary-foreground: 210 20% 88%;

    /* Muted - Subtle Intelligence */
    --muted: 240 6% 12%;
    --muted-foreground: 210 10% 65%;

    /* Accent - Amber Alert */
    --accent: 30 100% 50%;             /* #FF9500 - Amber warning */
    --accent-foreground: 240 6% 5%;

    /* Success - Neon Active */
    --success: 158 100% 50%;           /* #00FF9D - Active state */
    --success-foreground: 240 6% 5%;

    /* Destructive */
    --destructive: 0 84% 60%;
    --destructive-foreground: 210 20% 98%;

    /* Borders & Inputs */
    --border: 240 6% 18%;
    --input: 240 6% 12%;
    --ring: 180 100% 50%;              /* Cyan focus ring */

    --radius: 0.75rem;

    /* Gradients */
    --gradient-neural: linear-gradient(135deg, hsl(180 100% 50% / 0.1), hsl(158 100% 50% / 0.1));
    --gradient-glass: linear-gradient(180deg, hsl(240 6% 12% / 0.4), hsl(240 6% 8% / 0.6));
    --gradient-spectral: linear-gradient(90deg, hsl(180 100% 50% / 0.2), hsl(30 100% 50% / 0.2), hsl(158 100% 50% / 0.2));
    
    /* Shadows & Glows */
    --shadow-neural: 0 10px 40px -10px hsl(180 100% 50% / 0.4);
    --shadow-glass: 0 8px 32px 0 hsl(240 6% 5% / 0.6);
    --glow-cyan: 0 0 30px hsl(180 100% 50% / 0.5);
    --glow-amber: 0 0 30px hsl(30 100% 50% / 0.5);
    --glow-neon: 0 0 30px hsl(158 100% 50% / 0.5);

    /* Animations */
    --transition-neural: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-glass: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family: 'JetBrains Mono', 'Courier New', monospace;
  }

  /* Glass Morphism Base */
  .glass-panel {
    @apply backdrop-blur-xl bg-glass/40 border border-glass-border/20;
    box-shadow: var(--shadow-glass);
  }

  .glass-intense {
    @apply backdrop-blur-2xl bg-glass/60 border border-glass-border/30;
    box-shadow: var(--shadow-neural);
  }

  /* Neural Glow Effects */
  .glow-cyan {
    box-shadow: var(--glow-cyan);
  }

  .glow-amber {
    box-shadow: var(--glow-amber);
  }

  .glow-neon {
    box-shadow: var(--glow-neon);
  }

  /* Pulse Animation */
  @keyframes pulse-neural {
    0%, 100% {
      opacity: 1;
      transform: scale(1);
    }
    50% {
      opacity: 0.7;
      transform: scale(1.05);
    }
  }

  @keyframes shimmer {
    0% {
      background-position: -200% center;
    }
    100% {
      background-position: 200% center;
    }
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .animate-pulse-neural {
    animation: pulse-neural 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  .animate-shimmer {
    animation: shimmer 3s linear infinite;
    background: linear-gradient(90deg, 
      transparent, 
      hsl(var(--primary) / 0.1), 
      transparent
    );
    background-size: 200% 100%;
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
}
